{"version":3,"file":"index.js","sources":["../../src/common/ws-url.js","../../src/common/msg-struct.js","../../src/util/packet.js","../../src/util/convert.js","../../src/base/Socket.js","../../src/base/Room.js"],"sourcesContent":["/**\n * 获取对应的ws-url地址\n */\nlet wsUrl = 'ws://broadcastlv.chat.bilibili.com:2244/sub'\n\nif (window !== undefined) {\n  const protocol = location.origin.match(/^(.+):\\/\\//)[1]\n  if (protocol === 'https') {\n    wsUrl = 'wss://broadcastlv.chat.bilibili.com:2245/sub'\n  }\n}\n\nexport default wsUrl\n","/**\n * 各个帧结构所需要的字段，待拓展\n */\n\nconst messageStruct = [{\n  name: 'Header Length', // 帧头\n  key: 'headerLen',\n  bytes: 2, // 字节长度\n  offset: 4, // 偏移量\n  value: 16\n}, {\n  name: 'Protocol Version', // 协议版本\n  key: 'ver',\n  bytes: 2,\n  offset: 6,\n  value: 1\n}, {\n  name: 'Operation', // 指令\n  key: 'op',\n  bytes: 4,\n  offset: 8,\n  value: 1\n}, {\n  name: 'Sequence Id',\n  key: 'seq',\n  bytes: 4,\n  offset: 12,\n  value: 1\n}]\n\nexport default messageStruct\n","import { str2bytes } from './convert'\n\n/**\n * 生成对应的消息包\n * @param {Number} action 2是心跳包/7是加入房间\n * @param {String} payload\n */\nfunction generatePacket (action = 2, payload = '') {\n  const packet = str2bytes(payload)\n  const buff = new ArrayBuffer(packet.length + 16)\n  const dataBuf = new DataView(buff)\n  dataBuf.setUint32(0, packet.length + 16)\n  dataBuf.setUint16(4, 16)\n  dataBuf.setUint16(6, 1)\n  dataBuf.setUint32(8, action)\n  dataBuf.setUint32(12, 1)\n  for (let i = 0; i < packet.length; i++) {\n    dataBuf.setUint8(16 + i, packet[i])\n  }\n  return dataBuf\n}\n\nexport {\n  generatePacket\n}\n","/**\n * 字符串转化为Byte字节\n * @param {String} str 要转化的字符串\n * @return {Array[byte]} 字节数组\n */\nfunction str2bytes (str) {\n  const bytes = []\n  let c\n  const len = str.length\n  for (let i = 0; i < len; i++) {\n    c = str.charCodeAt(i)\n    if (c >= 0x010000 && c <= 0x10FFFF) {\n      bytes.push(((c >> 18) & 0x07) | 0xF0)\n      bytes.push(((c >> 12) & 0x3F) | 0x80)\n      bytes.push(((c >> 6) & 0x3F) | 0x80)\n      bytes.push((c & 0x3F) | 0x80)\n    } else if (c >= 0x000800 && c <= 0x00FFFF) {\n      bytes.push(((c >> 12) & 0x0F) | 0xE0)\n      bytes.push(((c >> 6) & 0x3F) | 0x80)\n      bytes.push((c & 0x3F) | 0x80)\n    } else if (c >= 0x000080 && c <= 0x0007FF) {\n      bytes.push(((c >> 6) & 0x1F) | 0xC0)\n      bytes.push((c & 0x3F) | 0x80)\n    } else {\n      bytes.push(c & 0xFF)\n    }\n  }\n  return bytes\n}\n\n/**\n * 将字节数组转化为字符串\n * @param {Array[byte]} bytesArray 字节数组\n * @return {String} 字符串\n */\nfunction bytes2str (array) {\n  const bytes = array.slice(0)\n  const filterArray = [\n    [0x7f],\n    [0x1f, 0x3f],\n    [0x0f, 0x3f, 0x3f],\n    [0x07, 0x3f, 0x3f, 0x3f]\n  ]\n  let j\n  let str = ''\n  for (let i = 0; i < bytes.length; i = i + j) {\n    const item = bytes[i]\n    let number = ''\n    if (item >= 240) {\n      j = 4\n    } else if (item >= 224) {\n      j = 3\n    } else if (item >= 192) {\n      j = 2\n    } else if (item < 128) {\n      j = 1\n    }\n    const filter = filterArray[j - 1]\n    for (let k = 0; k < j; k++) {\n      let r = (bytes[i + k] & filter[k]).toString(2)\n      const l = r.length\n      if (l > 6) {\n        number = r\n        break\n      }\n      for (let n = 0; n < 6 - l; n++) {\n        r = '0' + r\n      }\n      number = number + r\n    }\n    str = str + String.fromCharCode(parseInt(number, 2))\n  }\n  return str\n}\n\nexport {\n  str2bytes,\n  bytes2str\n}\n","import wsUrl from '../common/ws-url'\nimport msgStruct from '../common/msg-struct'\nimport { generatePacket } from '../util/packet'\nimport { bytes2str } from '../util/convert'\n\nexport default class Socket {\n  constructor (roomid) {\n    this.roomid = roomid\n    /* eslint-disable */\n    this._docker = new WebSocket(wsUrl)\n    this._methods = []\n  }\n\n  init () {\n    console.log(`新的socket正在初始化...`)\n    this._docker.binaryType = 'arraybuffer'\n    this._docker.onopen = event => {\n      const join = this._joinRoom(this.roomid)\n      this._docker.send(join.buffer)\n      this._sendBeat()\n    }\n\n    this._docker.onmessage = event => {\n      const dataView = new DataView(event.data)\n      let packetLen, headerLen\n      const result = []\n      for (let offset = 0; offset < dataView.byteLength;) {\n        const data = {}\n        packetLen = dataView.getUint32(offset)\n        headerLen = dataView.getUint16(offset + 4)\n\n        msgStruct.forEach(item => {\n          if (item.bytes === 4) {\n            data[item.key] = dataView.getUint32(offset + item.offset)\n          } else if (item.bytes === 2) {\n            data[item.key] = dataView.getUint16(offset + item.offset)\n          }\n        })\n\n        if (data.op && data.op === 5) {\n          data.body = []\n\n          const recData = []\n          for (let i = offset + headerLen; i < offset + packetLen; i++) {\n            recData.push(dataView.getUint8(i))\n          }\n          try {\n            data.body = []\n            const body = JSON.parse(bytes2str(recData))\n            if (body.cmd === 'DANMU_MSG') {\n              console.log(body.info[2][1], ':', body.info[1])\n              this._call({\n                name: body.info[2][1],\n                text: body.info[1]\n              })\n            }\n            data.body.push(body)\n          } catch (e) {\n            console.log(e)\n          }\n        }\n        result.push(data)\n        offset += packetLen\n      }\n      // console.warn(`该条message携带${result.length}条弹幕`, result)\n    }\n\n    this._docker.onclose = event => {\n      console.log(`旧的socket已经关闭...`)\n    }\n  }\n\n  addMethods (fns) {\n    this._methods = fns\n  }\n\n  close () {\n    // 清除定时脚本\n    if (this._timer) {\n      clearTimeout(this._timer)\n      this._timer = null\n    }\n    this._docker.close()\n  }\n\n  /**\n   * 执行函数\n   */\n  _call (...args) {\n    for (let i = 0, l = this._methods.length; i < l; i++) {\n      const fn = this._methods[i]\n      if (typeof fn !== 'function') continue\n      fn.apply(null, args)\n    }\n  }\n\n  /**\n   * 发送加入房价包\n   */\n  _joinRoom (rid = 282712, uid = 19176530) {\n    const packet = JSON.stringify({\n      uid,\n      roomid: rid\n    })\n    return generatePacket(7, packet)\n  }\n\n  /**\n   * 发送心跳包，表明连接激活\n   */\n  _sendBeat () {\n    this._timer = setInterval(() => {\n      this._docker.send(generatePacket())\n    }, 30 * 1000)\n  }\n}\n","import Socket from './Socket'\n\n/**\n * bilibili房间类\n */\nclass Room {\n  constructor (roomid) {\n    this.roomid = roomid\n    this.socket = new Socket(roomid)\n  }\n\n  _init () {\n    this.socket.init()\n  }\n\n  $start () {\n    console.log(`加入房间${this.roomid}`)\n    this._init()\n    return this\n  }\n\n  /**\n   * 销毁实例\n   */\n  $destroy () {\n    // 关闭socket\n    this.socket.close()\n    this.socket = null\n\n    console.log(`退出房间${this.roomid}`)\n    this.roomid = null\n  }\n\n  $subscribe (fn) {\n    const fns = Array.isArray(fn) ? fn : [fn]\n    this.socket.addMethods(fns)\n    return this\n  }\n\n}\n\nexport default Room\n"],"names":["let","wsUrl","undefined","window","location","origin","match","messageStruct","name","key","bytes","offset","value","generatePacket","action","payload","const","packet","str","c","len","length","i","charCodeAt","push","str2bytes","buff","ArrayBuffer","dataBuf","DataView","setUint32","setUint16","setUint8","Socket","roomid","this","_docker","WebSocket","_methods","init","console","log","binaryType","onopen","event","join","_joinRoom","this$1","send","buffer","_sendBeat","onmessage","packetLen","headerLen","dataView","data","getUint32","getUint16","msgStruct","forEach","item","op","body","recData","getUint8","JSON","parse","array","j","slice","filterArray","number","filter","k","r","toString","l","n","String","fromCharCode","parseInt","bytes2str","cmd","info","_call","text","e","byteLength","onclose","addMethods","fns","close","_timer","clearTimeout","fn","apply","args","rid","uid","stringify","setInterval","Room","socket","_init","$start","$destroy","$subscribe","Array","isArray"],"mappings":"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"}